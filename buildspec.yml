# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo Fazendo login no ECR...      
#       - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 011528257712.dkr.ecr.us-east-1.amazonaws.com
#       - REPOSITORY_URI=011528257712.dkr.ecr.us-east-1.amazonaws.com/meddiflux
#       - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_TAG=${COMMIT_HASH:=latest}
#   build:
#     commands:
#       - echo Build iniciado em `date`
#       - echo Gerando imagem da MEDDIFLUX...
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Build finalizado com sucesso em `date`
#       - echo Fazendo push da imagem para o ECR...
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Gerando artefato da imagem para o ECS
#       - printf '[{"name":"bia","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
# artifacts:
#   files: imagedefinitions.json
version: 0.2

phases:
  pre_build:
    commands:
      - echo "Fazendo login no ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 011528257712.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=011528257712.dkr.ecr.us-east-1.amazonaws.com/meddiflux
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo "Build iniciado em $(date)"
      - echo "Gerando imagem da MEDDIFLUX..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Build finalizado com sucesso em $(date)"
      - echo "Fazendo push da imagem para o ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Atualizando a referência da imagem no docker-compose.yml..."
      - |
        cat > docker-compose.yml << EOF
        version: '3'
        services:
          bia:
            image: ${REPOSITORY_URI}:${IMAGE_TAG}
            ports:
              - "80:3000"
        EOF
      - echo "Verificando conteúdo do docker-compose.yml..."
      - cat docker-compose.yml
      - echo "Compactando docker-compose.yml..."
      - zip -r deployment.zip docker-compose.yml
      - echo "Verificando conteúdo do zip..."
      - unzip -l deployment.zip

artifacts:
  files:
    - deployment.zip
  discard-paths: yes
